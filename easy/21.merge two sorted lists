solution 1:
 ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode *p1,*p2,*q1,*q2,*head;
        p1=p2=l1;
        q1=q2=head=l2;
        if(head==NULL)
            return p1;
        while(p1!=NULL && q1!=NULL){
            if(p1->val<=q1->val){
                if(q1==head){
                    p1=p1->next;
                    p2->next=q1;
                    q1=q2=head=p2;
                    p2=p1;
                }
                else{
                    q2->next=p1;
                    p1=p1->next;
                    p2->next=q1;
                    q2=p2;
                    p2=p1;
                }
            }
            else{
                q2=q1;
                q1=q1->next;
                if(q1==NULL)
                    break;
            }       
        }
        if(p1!=NULL && q2!=NULL){
            q2->next=p1;
        }
        
        return head;
    }
	
solution 2:
 ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode newlist(INT_MIN);
        ListNode *token=&newlist;  //指针初始化需要address而非value。
        while(l1&&l2){
            ListNode *&lr=l1->val<=l2->val?l1:l2; //为l1,l2指定别名
            token=token->next=lr;   //赋值顺序是从右到左。
            lr=lr->next;           //别名改变，等于当前引用的变量改变。
        }
        token->next=l1?l1:l2;
        return newlist.next;
    }